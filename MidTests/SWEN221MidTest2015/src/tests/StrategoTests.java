package tests;

import org.junit.*;
import static org.junit.Assert.fail;

import stratego.Game;
import stratego.io.*;

import org.junit.runners.MethodSorters;
import org.junit.FixMethodOrder;


@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class StrategoTests {

	/**
	 * ============================================================
	 * Part 1 --- Valid Basic Moves
	 * ============================================================
	 */

	@Test
	public void test_01() {
		// Check piece can move one step north
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "1\n" +
					   "M(1,3;N;1)";

		String finalBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|r0|##|##|__|__|##|##|__|__|\n" +
				"3|r1|__|__|__|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		checkValid(moves,startingBoard,finalBoard,1);
	}

	@Test
	public void test_02() {
		// Check scout can move two steps north
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|__|r1|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "1\n" +
					   "M(9,3;N;2)";

		String finalBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|r1|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		checkValid(moves,startingBoard,finalBoard,2);
	}

	@Test
	public void test_03() {
		// Check pieces can move horizontally

		// Check scout can move two steps north
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|__|r1|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "3\n" +
					   "M(9,3;N;1) M(1,6;S;1)" +
					   "M(9,4;W;1)";

		String finalBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|__|__|__|__|__|__|__|__|__|\n" +
				"5|__|b0|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|r1|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		checkValid(moves,startingBoard,finalBoard,3);
	}

	@Test
	public void test_04() {
		// Check pieces can occupy position previously occupied

		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|r2|r1|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "3\n" +
					   "M(9,3;N;1) M(1,6;S;1)" +
					   "M(8,3;E;1)";

		String finalBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|__|__|__|__|__|__|__|__|__|\n" +
				"5|__|b0|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|r1|\n" +
				"3|r1|r0|__|__|__|__|__|__|__|r2|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		checkValid(moves,startingBoard,finalBoard,4);
	}

	/**
	 * ============================================================
	 * Part 2 --- Valid Strike Moves
	 * ============================================================
	 */
	@Test
	public void test_05() {
		// Check one piece is defeated by another

		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|b2|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|__|r1|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "3\n" +
					   "M(9,3;N;2) M(8,6;S;1)" +
					   "L(9,5;W;1)";

		String finalBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|b2|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		checkValid(moves,startingBoard,finalBoard,5);
	}

	@Test
	public void test_06() {
		// Check one piece defeats another
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|r2|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "3\n" +
					   "M(8,3;N;1) M(9,6;S;2)" +
					   "W(8,4;E;1)";

		String finalBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|r2|\n" +
				"3|r1|r0|__|__|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";


		checkValid(moves,startingBoard,finalBoard,6);
	}

	@Test
	public void test_07() {
		// Check for draw between two pieces
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|__|r1|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "1\n" +
					   "D(9,3;N;3)";

		String finalBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		checkValid(moves,startingBoard,finalBoard,7);
	}

	/**
	 * ============================================================
	 * Part 3 --- Invalid Basic Moves
	 * ============================================================
	 */
	@Test
	public void test_08() {
		// Check cannot move piece at position which is unoccupied
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|__|r1|\n" +
				"2|rF|__|__|__|__|__|__|__|__|r1|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "1\n" +
					   "M(9,4;N;1)";

		checkInvalid(moves,startingBoard,8);
	}

	@Test
	public void test_09() {
		// Check impassable terrain cannot move at all

		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "1\n" +
					   "M(2,4;E;1)";

		checkInvalid(moves,startingBoard,9);
	}

	@Test
	public void test_10() {
		// Check flag cannot move at all

		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "1\n" +
					   "M(0,2;S;1)";

		checkInvalid(moves,startingBoard,10);
	}

	@Test
	public void test_11() {
		// Check piece (other than scout) cannot move more than one step at a time
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|r2|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "1\n" +
					   "M(4,3;N;2)";

		checkInvalid(moves,startingBoard,11);
	}

	@Test
	public void test_12() {
		// Check piece cannot move onto impassable terrain
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|r1|__|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "1\n" +
					   "M(2,3;N;1)";

		checkInvalid(moves,startingBoard,12);
	}

	@Test
	public void test_13() {
		// Check cannot move opponent's piece
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|r1|__|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "1\n" +
					   "M(2,3;N;1)";

		checkInvalid(moves,startingBoard,13);
	}

	@Test
	public void test_14() {
		// Check piece (other than scout) cannot move and strike more than one step at a time
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|b3|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|r6|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "3\n" +
					   "M(7,3;E;1) M(8,7;S;1)" +
					   "L(8,3;N;3)";

		checkInvalid(moves,startingBoard,14);
	}

	@Test
	public void test_15() {
		// Check piece cannot move into piece occupied by another piece
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|__|r1|\n" +
				"2|rF|__|__|__|__|__|__|__|__|r1|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "1\n" +
					   "M(9,3;S;1)";

		checkInvalid(moves,startingBoard,15);
	}

	/**
	 * ============================================================
	 * Part 4 --- Invalid Strike Moves
	 * ============================================================
	 */

	@Test
	public void test_16() {
		// Check piece cannot defeat impassable terrarin
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|r5|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "1\n" +
					   "W(3,3;N;1)";

		checkInvalid(moves,startingBoard,16);
	}

	@Test
	public void test_17() {
		// Check piece cannot be defeated by impassable terrarin
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|r5|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "1\n" +
					   "W(3,4;S;1)";

		checkInvalid(moves,startingBoard,17);
	}

	@Test
	public void test_18() {
		// Check impassable terrarin cannot be defeated by piece
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|r5|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "1\n" +
					   "L(3,4;S;1)";

		checkInvalid(moves,startingBoard,18);
	}


	@Test
	public void test_19() {
		// Check piece (other than scout) cannot move and strike more than one step at a time
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|b1|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|r4|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "3\n" +
					   "M(7,3;E;1) M(8,7;S;1)" +
					   "W(8,3;N;3)";

		checkInvalid(moves,startingBoard,19);
	}


	@Test
	public void test_20() {
		// Check cannot win against equal ranked piece
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|__|r1|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "1\n" +
					   "W(9,3;N;3)";

		checkInvalid(moves,startingBoard,20);
	}

	@Test
	public void test_21() {
		// Check cannot lose against equal ranked piece
		String moves = "1\n" +
					   "L(9,3;N;3)";

		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|__|r1|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		checkInvalid(moves,startingBoard,21);
	}

	@Test
	public void test_22() {
		// Check cannot win against higher ranked piece

		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|b2|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|__|r1|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "3\n" +
					   "M(9,3;N;2) M(8,6;S;1)" +
					   "W(9,5;W;1)";

		checkInvalid(moves,startingBoard,22);
	}

	@Test
	public void test_23() {
		// Check cannot lose against lower ranked piece
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|b1|b0|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|r1|r0|__|__|__|__|__|__|r2|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "3\n" +
					   "M(8,3;N;1) M(9,6;S;2)" +
				       "L(8,4;E;1)";

		checkInvalid(moves,startingBoard,23);
	}

	/**
	 * ============================================================
	 * Part 5 --- Special Strike Moves
	 * ============================================================
	 */

	@Test
	public void test_24() {
		// Check bomb cannot move at all
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|bB|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|rB|r0|__|__|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "1\n" +
					   "M(0,3;N;1)";

		checkInvalid(moves,startingBoard,24);
	}

	@Test
	public void test_25() {
		// Bombs defeat everything
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|bB|b0|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|rB|r0|__|__|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "7\n" +
					   "M(1,3;N;1) M(9,6;S;1)" +
					   "M(1,4;N;1) M(9,5;S;1)" +
					   "M(1,5;W;1) M(9,4;W;1)" +
					   "L(0,5;N;1)";
		String finalBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|bB|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|b1|__|\n" +
				"3|rB|__|__|__|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		checkValid(moves,startingBoard,finalBoard,25);
	}

	@Test
	public void test_26() {
		// Miners can defuse bombs

		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|bB|b0|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|rB|r2|__|__|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "7\n" +
					   "M(1,3;N;1) M(9,6;S;1)" +
					   "M(1,4;N;1) M(9,5;S;1)" +
					   "M(1,5;W;1) M(9,4;W;1)" +
					   "W(0,5;N;1)";
		String finalBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|r2|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|b1|__|\n" +
				"3|rB|__|__|__|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";


		checkValid(moves,startingBoard,finalBoard,26);
	}

	@Test
	public void test_27() {
		// Blue Spy defeats Red Marshal
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|bB|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|rB|r2|__|__|__|__|__|__|__|__|\n" +
				"2|rF|r9|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "8\n" +
					   "M(1,3;N;1) M(1,6;S;1)" +
					   "M(1,4;W;1) M(1,5;S;1)" +
					   "M(0,4;N;1) M(1,4;S;1)" +
					   "M(0,5;S;1) W(1,3;S;1)";

		String finalBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|bB|__|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|r2|__|##|##|__|__|##|##|__|__|\n" +
				"3|rB|__|__|__|__|__|__|__|__|__|\n" +
				"2|rF|b0|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		checkValid(moves,startingBoard,finalBoard,27);
	}

	@Test
	public void test_28() {
		// Blue Spy is defeated by Red Marshal, because the Marshal attacked
		// first.
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|bB|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|rB|r2|__|__|__|__|__|__|__|__|\n" +
				"2|rF|r9|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "7\n" +
				"M(1,3;N;1) M(1,6;S;1)" +
				"M(1,4;W;1) M(1,5;S;1)" +
				"M(0,4;N;1) M(1,4;S;1)" +
				"W(1,2;N;1)";

		String finalBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|bB|__|__|__|__|__|__|__|__|__|\n" +
				"5|r2|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|rB|r9|__|__|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		checkValid(moves,startingBoard,finalBoard,28);
	}

	/**
	 * ============================================================
	 * Part 6 --- Invalid Special Moves
	 * ============================================================
	 */
	@Test
	public void test_29() {
		// Blue Spy should not be defeated by Red Marshal
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|bB|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|rB|r2|__|__|__|__|__|__|__|__|\n" +
				"2|rF|r9|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "8\n" +
					   "M(1,3;N;1) M(1,6;S;1)" +
					   "M(1,4;W;1) M(1,5;S;1)" +
					   "M(0,4;N;1) M(1,4;S;1)" +
					   "M(0,5;S;1) L(1,3;S;1)";

		checkInvalid(moves,startingBoard,29);
	}

	@Test
	public void test_30() {
		// Blue Spy should not defeat Red Marshal, because the Marshal attacked
		// first.
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|bB|b0|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|rB|r2|__|__|__|__|__|__|__|__|\n" +
				"2|rF|r9|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "7\n" +
				"M(1,3;N;1) M(1,6;S;1)" +
				"M(1,4;W;1) M(1,5;S;1)" +
				"M(0,4;N;1) M(1,4;S;1)" +
				"L(1,2;N;1)";

		checkInvalid(moves,startingBoard,30);
	}

	@Test
	public void test_31() {
		// Blue Scout should not be able to jump over red piece!
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|bB|b0|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|rB|r0|__|__|__|__|__|__|__|r1|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "2\n" +
				"M(9,3;N;1) M(9,6;S;3)";

		checkInvalid(moves,startingBoard,31);
	}

	@Test
	public void test_32() {
		// Blue Scout should not be able to jump over red piece!
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|bB|b0|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|rB|r0|__|__|__|__|__|__|__|__|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|r1|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "2\n" +
				"M(9,1;N;1) M(9,6;S;5)";

		checkInvalid(moves,startingBoard,32);
	}

	@Test
	public void test_33() {
		// Blue Scout should not be able to jump and strike over red piece!
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|b2|\n" +
				"6|bB|b0|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|rB|r0|__|__|__|__|__|__|__|r1|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "1\n" +
				"L(9,3;N;4)";

		checkInvalid(moves,startingBoard,33);
	}

	/**
	 * ============================================================
	 * Part 7 --- Winning & Losing
	 * ============================================================
	 */
	@Test
	public void test_34() {
		// Should be possible to capture the flag
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|bB|__|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|rB|r1|__|__|__|__|__|__|__|__|\n" +
				"2|rF|r9|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "3\n" +
				"M(1,3;N;4) M(9,6;S;1)" +
				"W(1,7;W;1)";

		String finalBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|r1|__|__|__|__|__|__|__|__|__|\n" +
				"6|bB|__|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|b1|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|rB|__|__|__|__|__|__|__|__|__|\n" +
				"2|rF|r9|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		checkValid(moves,startingBoard,finalBoard,34);
	}

	@Test
	public void test_35() {
		// Once the flag is captured, no more moves are permitted
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|bB|__|__|__|__|__|__|__|__|b1|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|rB|r1|__|__|__|__|__|__|__|__|\n" +
				"2|rF|r9|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "4\n" +
				"M(1,3;N;4) M(9,6;S;1)" +
				"W(1,7;W;1) M(9,5;S;1)";

		checkInvalid(moves,startingBoard,35);
	}

	@Test
	public void test_36() {
		// A player who can no longer move automatically loses, and no further
		// moves are permitted.
		String startingBoard =
				"9|__|__|__|__|__|__|__|__|__|__|\n" +
				"8|__|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|__|\n" +
				"6|bB|__|__|__|__|__|__|__|__|b2|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|rB|__|__|__|__|__|__|__|__|r1|\n" +
				"2|rF|__|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "4\n" +
				"M(9,3;N;1) M(9,6;S;1)" +
				"L(9,4;N;1) M(9,5;S;1)";

		checkInvalid(moves,startingBoard,36);
	}

	@Test
	public void test_37() {
		// A player who can no longer move automatically loses, and no further
		// moves are permitted.
		String startingBoard =
				"9|b9|bB|__|__|__|__|__|__|__|__|\n" +
				"8|bB|__|__|__|__|__|__|__|__|__|\n" +
				"7|bF|__|__|__|__|__|__|__|__|b1|\n" +
				"6|bB|__|__|__|__|__|__|__|__|__|\n" +
				"5|__|__|##|##|__|__|##|##|__|__|\n" +
				"4|__|__|##|##|__|__|##|##|__|__|\n" +
				"3|rB|r1|__|__|__|__|__|__|__|r2|\n" +
				"2|rF|r9|__|__|__|__|__|__|__|__|\n" +
				"1|__|__|__|__|__|__|__|__|__|__|\n" +
				"0|__|__|__|__|__|__|__|__|__|__|\n" +
				"  0  1  2  3  4  5  6  7  8  9 ";

		String moves = "5\n" +
				"M(9,3;N;1) M(9,7;S;1)" +
				"M(9,4;N;1) L(9,6;S;1)" +
				"M(9,5;N;1)";

		checkInvalid(moves,startingBoard,37);
	}

	/**
	 * ============================================================
	 * Helper Functions
	 * ============================================================
	 */

	/**
	 * This method checks whether or not the given input string is valid.
	 *
	 * ** DO NOT MODIFY THIS FUNCTION **
	 *
	 * @param moves
	 */
	public void checkValid(String moves, String startingBoard, String expectedFinalBoard,
			int testNumber) {
		Game game;

		System.out
		.println("===================================================");
		System.out.println("TEST " + testNumber);
		System.out
		.println("===================================================");

		// First, parse the list of moves
		try {
			game = new Parser(moves).parse();
			game.initialiseBoard(startingBoard);
			game.run();
		} catch (GameError e) {
			throw new RuntimeException(e);
		}

		// Second, create the board and apply each move to the board.
		String finalBoard = game.toString();
		if (!finalBoard.equals(expectedFinalBoard)) {
			System.out.println("EXPECTED:");
			System.out.println(expectedFinalBoard);
			System.out.println("ACTUAL:");
			System.out.println(finalBoard);
			fail("Invalid final board --- see the console for details");
		}
	}

	/**
	 * This method checks whether or not the given input string is invalid.
	 *
	 * ** DO NOT MODIFY THIS FUNCTION **
	 *
	 * @param moves
	 */
	public void checkInvalid(String moves, String startingBoard, int testNumber) {
		Game game;

		System.out
		.println("===================================================");
		System.out.println("TEST " + testNumber);
		System.out
		.println("===================================================");

		// First, parse the list of moves
		try {
			game = new Parser(moves).parse();
			game.initialiseBoard(startingBoard);
			game.run();
			System.out.println("Test should have generated a GameError, but didn't");
			System.out.println("\nBOARD:");
			System.out.println(game.toString());
			fail("Test failed to throw a GameError (as expected)");
		} catch (GameError e) {
			// This is what we want to happen, since the input game is invalid.
			// Therefore, we simply exit the test correctly.
			return;
		}
	}

}
